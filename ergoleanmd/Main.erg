package ergoleanmd;

import ergoline::_;
import ck;

class Main {
    @entry def self(args: array<string>) {
        var curArg = 1;

        //read user parameters
        //number of cells in each dimension
        if (args.size() > curArg) {
            Globals.cellArrayDimX=(args[curArg]).toInt(); curArg += 1;
            Globals.cellArrayDimY=(args[curArg]).toInt(); curArg += 1;
            Globals.cellArrayDimZ=(args[curArg]).toInt(); curArg += 1;
        }

        //number of steps in simulation
        if (args.size() > curArg) {
            Globals.nSteps=(args[curArg]).toInt(); curArg += 1;
        }

        Globals.mainProxy = self@;
        Globals.computeProxy = new Compute@array6d();
        Globals.cellProxy = new Cell@array3d(
            Globals.cellArrayDimX, Globals.cellArrayDimY, Globals.cellArrayDimZ
        );

        ck::updateGlobal<Globals>(self@run);
    }

    @threaded @entry def run() {

    }
}
